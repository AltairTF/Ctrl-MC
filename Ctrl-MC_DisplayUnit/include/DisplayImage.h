/***  Ctrl-MC // An open source Motorcycle Controller Arduino project by KI Hestad: https://github.com/KIHestad/Ctrl-MC  ***/

enum ImagePosition {imgPosMenuCenter, imgPosCenter, imgPos2Left, imgPos2Right, imgPos3Left, imgPos3RightTop, imgPos3RightBottom};

class DisplayImage {

    private:

        void image(const unsigned char img[], ImagePosition imgPos, uint8_t width, uint8_t height) {
            if (imgPos == imgPosMenuCenter)
                display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2), 3+25-(height/2), img, width, height, SSD1306_WHITE);
            else if (imgPos == imgPosCenter)
                display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2), (Config::DisplaySettings::screenHeight/2)-(height/2), img, width, height, SSD1306_WHITE);
            else if (imgPos == imgPos2Left)
                display.drawBitmap(0, (Config::DisplaySettings::screenHeight/2)-(height/2), img, width, height, SSD1306_WHITE);
            else if (imgPos == imgPos2Right)
                display.drawBitmap(Config::DisplaySettings::screenWidth-width, (Config::DisplaySettings::screenHeight/2)-(height/2), img, width, height, SSD1306_WHITE);
            else if (imgPos == imgPos3Left)
                display.drawBitmap(((Config::DisplaySettings::screenWidth-35)/2)-(width/2), (Config::DisplaySettings::screenHeight/2)-(height/2), img, width, height, SSD1306_WHITE);
            else if (imgPos == imgPos3RightTop)
                display.drawBitmap(Config::DisplaySettings::screenWidth-width, 0, img, width, height, SSD1306_WHITE);
            else if (imgPos == imgPos3RightBottom)
                display.drawBitmap(Config::DisplaySettings::screenWidth-width, Config::DisplaySettings::screenHeight/2, img, width, height, SSD1306_WHITE);
        }

    public:
    
        void kiHestadLogo() {
            static const unsigned char PROGMEM img[] = {
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x1f, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xdf, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0x8f, 0x3d, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7d, 0xcf, 0x3c, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xf8, 0xc6, 0x38, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xfc, 0x42, 0x11, 0xcf, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xfc, 0x00, 0x00, 0x8f, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0x0c, 0xc4, 0x0f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xfc, 0x7f, 0xfc, 0x0f, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xfe, 0x7f, 0xff, 0xcf, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xf1, 0xff, 0xff, 0xef, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xe0, 0xff, 0xff, 0xc3, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xe4, 0xff, 0xbf, 0xc3, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xe7, 0xf1, 0x87, 0xf3, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xe7, 0xc3, 0xc3, 0xf9, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xe7, 0x8f, 0xf3, 0xf9, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xe7, 0xff, 0xff, 0x93, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xe4, 0xfe, 0xff, 0x93, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xe0, 0xfc, 0xff, 0x03, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xe0, 0x7c, 0xff, 0x07, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xf2, 0x7c, 0xff, 0x3f, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xfe, 0x7c, 0xfe, 0x3f, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xfe, 0x79, 0xfe, 0x7f, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xfe, 0x39, 0xfe, 0x7f, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x39, 0xfe, 0x7f, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x39, 0xde, 0x7f, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x38, 0x1c, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x38, 0x3c, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0x9f, 0xec, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0x9c, 0x0c, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0x90, 0x1c, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x91, 0xf9, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x9f, 0xf9, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xcf, 0xf9, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xc0, 0x01, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfe, 0x40, 0x00, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xf8, 0x7f, 0xfe, 0x3f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xe0, 0x7f, 0xfe, 0x0f, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x02, 0x3f, 0xfc, 0x03, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x1f, 0x1f, 0xf0, 0xe0, 0x47, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0x80, 0x01, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xe0, 0x07, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
            };
            display.clearDisplay();
            display.drawBitmap(0,0, img, Config::DisplaySettings::screenWidth, Config::DisplaySettings::screenHeight, SSD1306_WHITE);
            display.display();
        }

        void ignOff() {
            static const unsigned char PROGMEM img[] = {
                // 'IGN_OFF', 46x50px
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x01, 
                0xff, 0xfe, 0x00, 0x00, 0x02, 0x07, 0xff, 0xff, 0x80, 0x00, 0x07, 0x1f, 0xff, 0xff, 0xe0, 0x00, 
                0x0f, 0x8f, 0xff, 0xff, 0xf8, 0x00, 0x1f, 0xc7, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xe3, 0xe0, 0x1f, 
                0xfe, 0x00, 0x0f, 0xf1, 0x00, 0x03, 0xff, 0x00, 0x07, 0xf8, 0x00, 0x00, 0xff, 0x80, 0x03, 0xfc, 
                0x00, 0x00, 0x7f, 0xc0, 0x01, 0xfe, 0x00, 0x00, 0x3f, 0xc0, 0x18, 0xff, 0x00, 0x00, 0x1f, 0xe0, 
                0x1c, 0x7f, 0x80, 0x00, 0x0f, 0xe0, 0x3e, 0x3f, 0xc0, 0x00, 0x07, 0xf0, 0x3f, 0x1f, 0xe0, 0x00, 
                0x03, 0xf0, 0x7f, 0x0f, 0xf0, 0x00, 0x03, 0xf8, 0x7e, 0x07, 0xf8, 0x00, 0x01, 0xf8, 0x7e, 0x03, 
                0xfc, 0x00, 0x01, 0xf8, 0xfe, 0x01, 0xfe, 0x00, 0x01, 0xfc, 0xfc, 0x00, 0xff, 0x00, 0x00, 0xfc, 
                0xfc, 0x00, 0x7f, 0x80, 0x00, 0xfc, 0xfc, 0x00, 0x3f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 0x1f, 0xe0, 
                0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xe0, 0x00, 0xfc, 0xfc, 0x00, 0x07, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 
                0x03, 0x80, 0x00, 0xfc, 0xfc, 0x00, 0x01, 0x00, 0x00, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xfc, 
                0x7e, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7e, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7f, 0x00, 0x00, 0x00, 
                0x03, 0xf8, 0x3f, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x3f, 0x80, 0x00, 0x00, 0x07, 0xf0, 0x1f, 0xc0, 
                0x00, 0x00, 0x0f, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0xe0, 0x0f, 0xf0, 0x00, 0x00, 0x1f, 0xc0, 
                0x0f, 0xf8, 0x00, 0x00, 0x7f, 0xc0, 0x07, 0xfc, 0x00, 0x00, 0xff, 0x80, 0x03, 0xff, 0x00, 0x03, 
                0xff, 0x00, 0x01, 0xff, 0xe0, 0x1f, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 
                0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 
                0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00
            };
            uint8_t width = 46;
            uint8_t height = 50;
            display.clearDisplay();
            display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2),3, img, width, height, SSD1306_WHITE);
            display.display();
        }

        void ignOffToOn1() {
            static const unsigned char PROGMEM img[] = {
                // 'IGN_OFF_TO_ON1', 46x50px
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x3f, 0xf0, 0x00, 0x00, 0x01, 0xfc, 
                0xff, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0xff, 0x80, 0x00, 0x00, 0xfe, 0x7f, 0xff, 0xe0, 0x00, 
                0x00, 0x7f, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x7f, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0x80, 0x1f, 
                0xfe, 0x00, 0x03, 0x1f, 0x80, 0x03, 0xff, 0x00, 0x07, 0x9f, 0xc0, 0x00, 0xff, 0x80, 0x0f, 0x8f, 
                0xe0, 0x00, 0x7f, 0xc0, 0x0f, 0xcf, 0xe0, 0x00, 0x3f, 0xc0, 0x1f, 0xc7, 0xf0, 0x00, 0x1f, 0xe0, 
                0x1f, 0xc7, 0xf0, 0x00, 0x0f, 0xe0, 0x3f, 0x83, 0xf8, 0x00, 0x07, 0xf0, 0x3f, 0x01, 0xf8, 0x00, 
                0x03, 0xf0, 0x7f, 0x01, 0xfc, 0x00, 0x03, 0xf8, 0x7e, 0x00, 0xfe, 0x00, 0x01, 0xf8, 0x7e, 0x00, 
                0xfe, 0x00, 0x01, 0xf8, 0xfe, 0x00, 0x7f, 0x00, 0x01, 0xfc, 0xfc, 0x00, 0x7f, 0x00, 0x00, 0xfc, 
                0xfc, 0x00, 0x3f, 0x80, 0x00, 0xfc, 0xfc, 0x00, 0x1f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 0x1f, 0xc0, 
                0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xe0, 0x00, 0xfc, 0xfc, 0x00, 0x0f, 0x80, 0x00, 0xfc, 0xfc, 0x00, 
                0x06, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xfc, 
                0x7e, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7e, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7f, 0x00, 0x00, 0x00, 
                0x03, 0xf8, 0x3f, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x3f, 0x80, 0x00, 0x00, 0x07, 0xf0, 0x1f, 0xc0, 
                0x00, 0x00, 0x0f, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0xe0, 0x0f, 0xf0, 0x00, 0x00, 0x1f, 0xc0, 
                0x0f, 0xf8, 0x00, 0x00, 0x7f, 0xc0, 0x07, 0xfc, 0x00, 0x00, 0xff, 0x80, 0x03, 0xff, 0x00, 0x03, 
                0xff, 0x00, 0x01, 0xff, 0xe0, 0x1f, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 
                0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 
                0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00
            };
            uint8_t width = 46;
            uint8_t height = 50;
            display.clearDisplay();
            display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2),3, img, width, height, SSD1306_WHITE);
            display.display();
        }
            
        void ignOffToOn2() {
            static const unsigned char PROGMEM img[] = {
                // 'IGN_OFF_TO_ON2', 46x50px
                0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 
                0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf3, 0xf0, 0x00, 0x00, 0x00, 0x03, 
                0xf3, 0xff, 0x00, 0x00, 0x00, 0x03, 0xfb, 0xff, 0x80, 0x00, 0x00, 0x19, 0xf9, 0xff, 0xe0, 0x00, 
                0x00, 0x79, 0xf9, 0xff, 0xf8, 0x00, 0x00, 0xf9, 0xf9, 0xff, 0xfc, 0x00, 0x01, 0xfd, 0xfc, 0x3f, 
                0xfe, 0x00, 0x03, 0xfc, 0xfc, 0x07, 0xff, 0x00, 0x07, 0xfc, 0xfc, 0x00, 0xff, 0x80, 0x0f, 0xf8, 
                0xfc, 0x00, 0x7f, 0xc0, 0x0f, 0xf0, 0x7e, 0x00, 0x3f, 0xc0, 0x1f, 0xe0, 0x7e, 0x00, 0x1f, 0xe0, 
                0x1f, 0xc0, 0x7e, 0x00, 0x0f, 0xf0, 0x3f, 0x80, 0x7f, 0x00, 0x07, 0xf0, 0x7f, 0x00, 0x3f, 0x00, 
                0x07, 0xf8, 0x7f, 0x00, 0x3f, 0x00, 0x03, 0xf8, 0x7f, 0x00, 0x3f, 0x00, 0x01, 0xf8, 0x7e, 0x00, 
                0x3f, 0x80, 0x01, 0xf8, 0xfe, 0x00, 0x1f, 0x80, 0x01, 0xfc, 0xfe, 0x00, 0x1f, 0x80, 0x00, 0xfc, 
                0xfc, 0x00, 0x1f, 0x80, 0x00, 0xfc, 0xfc, 0x00, 0x1f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xc0, 
                0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 0x0f, 0x80, 0x00, 0xfc, 0xfc, 0x00, 
                0x00, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x01, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xfc, 
                0x7e, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7e, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x7f, 0x00, 0x00, 0x00, 
                0x03, 0xf8, 0x7f, 0x80, 0x00, 0x00, 0x03, 0xf8, 0x3f, 0x80, 0x00, 0x00, 0x07, 0xf0, 0x3f, 0xc0, 
                0x00, 0x00, 0x0f, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x0f, 0xf0, 0x00, 0x00, 0x3f, 0xc0, 
                0x0f, 0xf8, 0x00, 0x00, 0x7f, 0xc0, 0x07, 0xfc, 0x00, 0x01, 0xff, 0x80, 0x03, 0xff, 0x80, 0x03, 
                0xff, 0x00, 0x01, 0xff, 0xf0, 0x1f, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 
                0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 
                0x00, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00
            };
            uint8_t width = 46;
            uint8_t height = 50;
            display.clearDisplay();
            display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2),3, img, width, height, SSD1306_WHITE);
            display.display();
        }

        void ignOn() {
            static const unsigned char PROGMEM img[] = {
                // 'IGN_ON', 46x50px
                0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 
                0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x01, 
                0xcf, 0xce, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xcf, 0x80, 0x00, 0x00, 0x1f, 0xcf, 0xcf, 0xe0, 0x00, 
                0x00, 0x7f, 0xcf, 0xcf, 0xf8, 0x00, 0x00, 0xff, 0xcf, 0xcf, 0xfc, 0x00, 0x01, 0xff, 0xcf, 0xcf, 
                0xfe, 0x00, 0x03, 0xff, 0x0f, 0xc3, 0xff, 0x00, 0x07, 0xfc, 0x0f, 0xc0, 0xff, 0x80, 0x0f, 0xf8, 
                0x0f, 0xc0, 0x7f, 0xc0, 0x0f, 0xf0, 0x0f, 0xc0, 0x3f, 0xc0, 0x1f, 0xe0, 0x0f, 0xc0, 0x1f, 0xe0, 
                0x1f, 0xc0, 0x0f, 0xc0, 0x0f, 0xe0, 0x3f, 0x80, 0x0f, 0xc0, 0x07, 0xf0, 0x3f, 0x00, 0x0f, 0xc0, 
                0x03, 0xf0, 0x7f, 0x00, 0x0f, 0xc0, 0x03, 0xf8, 0x7e, 0x00, 0x0f, 0xc0, 0x01, 0xf8, 0x7e, 0x00, 
                0x0f, 0xc0, 0x01, 0xf8, 0xfe, 0x00, 0x0f, 0xc0, 0x01, 0xfc, 0xfc, 0x00, 0x0f, 0xc0, 0x00, 0xfc, 
                0xfc, 0x00, 0x0f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xc0, 
                0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 0x0f, 0xc0, 0x00, 0xfc, 0xfc, 0x00, 
                0x00, 0x00, 0x00, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xfc, 
                0x7e, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7e, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7f, 0x00, 0x00, 0x00, 
                0x03, 0xf8, 0x3f, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x3f, 0x80, 0x00, 0x00, 0x07, 0xf0, 0x1f, 0xc0, 
                0x00, 0x00, 0x0f, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0xe0, 0x0f, 0xf0, 0x00, 0x00, 0x1f, 0xc0, 
                0x0f, 0xf8, 0x00, 0x00, 0x7f, 0xc0, 0x07, 0xfc, 0x00, 0x00, 0xff, 0x80, 0x03, 0xff, 0x00, 0x03, 
                0xff, 0x00, 0x01, 0xff, 0xe0, 0x1f, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 
                0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 
                0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00
            };
            uint8_t width = 46;
            uint8_t height = 50;
            display.clearDisplay();
            display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2),3, img, width, height, SSD1306_WHITE);
            display.display();
        }

        void warning() {
            static const unsigned char PROGMEM img[] = {
                // 'Warning', 48x48px
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
                0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 
                0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 
                0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 
                0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x3f, 0x80, 0x00, 0x00, 0x01, 0xf8, 0x1f, 
                0x80, 0x00, 0x00, 0x03, 0xf8, 0x1f, 0xc0, 0x00, 0x00, 0x03, 0xf8, 0x1f, 0xc0, 0x00, 0x00, 0x07, 
                0xf8, 0x1f, 0xe0, 0x00, 0x00, 0x07, 0xf8, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 
                0x00, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0x00, 0x1f, 0xf8, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x1f, 
                0xf8, 0x00, 0x00, 0x3f, 0xf8, 0x1f, 0xfc, 0x00, 0x00, 0x3f, 0xf8, 0x1f, 0xfc, 0x00, 0x00, 0x7f, 
                0xf8, 0x1f, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x1f, 0xfe, 0x00, 0x00, 0xff, 0xf8, 0x1f, 0xff, 0x00, 
                0x00, 0xff, 0xf8, 0x1f, 0xff, 0x00, 0x01, 0xff, 0xf8, 0x1f, 0xff, 0x80, 0x01, 0xff, 0xf8, 0x1f, 
                0xff, 0x80, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 
                0xff, 0xff, 0xff, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xf8, 0x1f, 0xff, 0xf0, 
                0x0f, 0xff, 0xf8, 0x1f, 0xff, 0xf0, 0x1f, 0xff, 0xf8, 0x1f, 0xff, 0xf8, 0x1f, 0xff, 0xf8, 0x1f, 
                0xff, 0xf8, 0x3f, 0xff, 0xf8, 0x1f, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 
                0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
            };
            uint8_t width = 48;
            uint8_t height = 48;
            display.clearDisplay();
            display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2),0, img, width, height, SSD1306_WHITE);
        }

        void retry() {
            static const unsigned char PROGMEM img[] = {
                // 'retry', 50x42px
                0x01, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x01, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0x87, 
                0xff, 0xff, 0xff, 0x00, 0x00, 0x03, 0x87, 0xff, 0xff, 0xff, 0x80, 0x00, 0x07, 0xc7, 0xff, 0xff, 
                0xff, 0xc0, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x07, 0xe0, 
                0x00, 0x0f, 0xe0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x1f, 
                0xf0, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x3f, 0xf8, 0x00, 
                0x00, 0x00, 0xf8, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 
                0xf8, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xf8, 0x00, 
                0x07, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 0xc0, 
                0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x00, 
                0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xf8, 
                0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 
                0xc0, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x07, 0xc0, 0x00, 
                0x00, 0x1f, 0xff, 0xc0, 0x07, 0xc0, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x07, 0xc0, 0x00, 0x00, 0x0f, 
                0xff, 0x80, 0x07, 0xc0, 0x00, 0x00, 0x07, 0xff, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x07, 0xff, 0x00, 
                0x07, 0xe0, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x03, 0xf0, 
                0x00, 0x00, 0x01, 0xfc, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x01, 0xfe, 0x00, 0x00, 
                0x00, 0xf8, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf8, 0xf8, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x70, 
                0x00, 0x00, 0x3f, 0xff, 0xff, 0xf8, 0x70, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x20, 0x00, 0x00, 
                0x03, 0xff, 0xff, 0xf8, 0x20, 0x00
            };
            uint8_t width = 50;
            uint8_t height = 42;
            display.clearDisplay();
            display.drawBitmap((Config::DisplaySettings::screenWidth/2)-(width/2),6, img, width, height, SSD1306_WHITE);
        }

        void stopwatch() {
            static const unsigned char PROGMEM img[] = {
                // 'stopwatch_v2', 26x31px
                0x00, 0x1e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 
                0x00, 0x1c, 0x00, 0x00, 0x01, 0xff, 0xc3, 0x00, 0x07, 0xff, 0xf3, 0x80, 0x0f, 0x00, 0x7f, 0x80, 
                0x1c, 0x0c, 0x1e, 0x00, 0x38, 0x00, 0x0e, 0x00, 0x30, 0x00, 0x07, 0x00, 0x70, 0x00, 0x03, 0x00, 
                0x60, 0x00, 0x63, 0x80, 0xe0, 0x00, 0xc1, 0x80, 0xc0, 0x01, 0x81, 0x80, 0xc0, 0x03, 0x01, 0x80, 
                0xc0, 0x02, 0x01, 0x80, 0xf0, 0x0c, 0x05, 0x80, 0xe0, 0x00, 0x01, 0x80, 0xc0, 0x00, 0x01, 0x80, 
                0xc0, 0x00, 0x01, 0x80, 0xc0, 0x00, 0x01, 0x80, 0x60, 0x00, 0x03, 0x80, 0x60, 0x00, 0x03, 0x00, 
                0x30, 0x00, 0x07, 0x00, 0x38, 0x00, 0x0e, 0x00, 0x1c, 0x0c, 0x1c, 0x00, 0x0f, 0x00, 0x78, 0x00, 
                0x07, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0x00, 0x00
            };
            uint8_t width = 26;
            uint8_t height = 31;
            display.drawBitmap(0,((Config::DisplaySettings::screenHeight/2)-(height/2))-Config::DisplaySettings::textCharHeight, img, width, height, SSD1306_WHITE);
            display.display();
        }

        void temperature() {
            static const unsigned char PROGMEM img[] = {
                // 'temperature', 24x48px
                0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0xff, 0xc0, 0x01, 0xc0, 0x60, 0x01, 0x80, 0x60, 0x01, 
                0x80, 0x60, 0xe1, 0x80, 0x60, 0xe1, 0x80, 0x60, 0xe1, 0x80, 0x60, 0x01, 0x9e, 0x60, 0x01, 0x9e, 
                0x60, 0x01, 0x9e, 0x60, 0xe1, 0x9e, 0x60, 0xe1, 0x9e, 0x60, 0x01, 0x9e, 0x60, 0x01, 0x9e, 0x60, 
                0x01, 0x9e, 0x60, 0xe1, 0x9e, 0x60, 0xe1, 0x9e, 0x60, 0x01, 0x9e, 0x60, 0x01, 0x9e, 0x60, 0x01, 
                0x9e, 0x60, 0xe1, 0x9e, 0x60, 0xe1, 0x9e, 0x60, 0xc1, 0x9e, 0x60, 0x01, 0x9e, 0x60, 0x01, 0x9e, 
                0x60, 0x41, 0x9e, 0x60, 0xe1, 0x9e, 0x60, 0xe1, 0x9e, 0x70, 0x03, 0x9e, 0x30, 0x03, 0x1e, 0x38, 
                0x06, 0x3f, 0x1c, 0x0c, 0x7f, 0x8c, 0x0c, 0xff, 0xcc, 0x1c, 0xcf, 0xe6, 0x19, 0xdf, 0xe6, 0x19, 
                0x9f, 0xe6, 0x19, 0xdf, 0xe6, 0x19, 0xff, 0xe6, 0x0c, 0xff, 0xe6, 0x0c, 0xff, 0xcc, 0x0e, 0x7f, 
                0x8c, 0x06, 0x1f, 0x18, 0x03, 0x00, 0x38, 0x01, 0xc0, 0xf0, 0x00, 0xff, 0xc0, 0x00, 0x3f, 0x00
            };
            uint8_t width = 24;
            uint8_t height = 48;
            display.drawBitmap(0,((Config::DisplaySettings::screenHeight/2)-(height/2))-Config::DisplaySettings::textCharHeight, img, width, height, SSD1306_WHITE);
            display.display();
        }

        void lightsOffBig(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'L_OFF_BIG', 34x36px
                0xfe, 0x00, 0x00, 0x1f, 0xc0, 0xff, 0x80, 0x00, 0x7f, 0xc0, 0xff, 0xe0, 0x01, 0xff, 0xc0, 0xff, 
                0xf0, 0x03, 0xff, 0xc0, 0xf3, 0xf0, 0x03, 0xf3, 0xc0, 0xf0, 0xf8, 0x07, 0xc3, 0xc0, 0xf0, 0x7c, 
                0x0f, 0x83, 0xc0, 0xf0, 0x3c, 0x0f, 0x03, 0xc0, 0xf0, 0x3c, 0x0f, 0x03, 0xc0, 0xf0, 0x1e, 0x1e, 
                0x03, 0xc0, 0xf0, 0x1e, 0x1e, 0x03, 0xc0, 0xf0, 0x1e, 0x1e, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 
                0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 
                0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 
                0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x0f, 
                0x3c, 0x03, 0xc0, 0xf0, 0x0f, 0x3c, 0x03, 0xc0, 0xf0, 0x1e, 0x1e, 0x03, 0xc0, 0xf0, 0x1e, 0x1e, 
                0x03, 0xc0, 0xf0, 0x1e, 0x1e, 0x03, 0xc0, 0xf0, 0x3c, 0x0f, 0x03, 0xc0, 0xf0, 0x3c, 0x0f, 0x03, 
                0xc0, 0xf0, 0x7c, 0x0f, 0x83, 0xc0, 0xf0, 0xf8, 0x07, 0xc3, 0xc0, 0xf1, 0xf0, 0x03, 0xe3, 0xc0, 
                0xff, 0xf0, 0x03, 0xff, 0xc0, 0xff, 0xe0, 0x01, 0xff, 0xc0, 0xff, 0x80, 0x00, 0x7f, 0xc0, 0xfe, 
                0x00, 0x00, 0x1f, 0xc0
            };
            image(img, imgPos, 34, 36);
        }

        void lightsParkBig(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'L_PARK_BIG', 60x36px
                0x20, 0x07, 0xf0, 0x00, 0x00, 0xfe, 0x00, 0x40, 0x70, 0x07, 0xfc, 0x00, 0x03, 0xfe, 0x00, 0xe0, 
                0xf8, 0x07, 0xff, 0x00, 0x0f, 0xfe, 0x01, 0xf0, 0x7c, 0x07, 0xff, 0x80, 0x1f, 0xfe, 0x03, 0xe0, 
                0x3e, 0x07, 0x9f, 0x80, 0x1f, 0x9e, 0x07, 0xc0, 0x1f, 0x07, 0x87, 0xc0, 0x3e, 0x1e, 0x0f, 0x80, 
                0x0f, 0x87, 0x83, 0xe0, 0x7c, 0x1e, 0x1f, 0x00, 0x07, 0xc7, 0x81, 0xe0, 0x78, 0x1e, 0x3e, 0x00, 
                0x03, 0xe7, 0x81, 0xe0, 0x78, 0x1e, 0x7c, 0x00, 0x01, 0xc7, 0x80, 0xf0, 0xf0, 0x1e, 0x38, 0x00, 
                0x00, 0x87, 0x80, 0xf0, 0xf0, 0x1e, 0x10, 0x00, 0x00, 0x07, 0x80, 0xf0, 0xf0, 0x1e, 0x00, 0x00, 
                0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 
                0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 
                0xff, 0xc7, 0x80, 0x79, 0xe0, 0x1e, 0x3f, 0xf0, 0xff, 0xc7, 0x80, 0x79, 0xe0, 0x1e, 0x3f, 0xf0, 
                0xff, 0xc7, 0x80, 0x79, 0xe0, 0x1e, 0x3f, 0xf0, 0xff, 0xc7, 0x80, 0x79, 0xe0, 0x1e, 0x3f, 0xf0, 
                0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 
                0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 0x00, 0x07, 0x80, 0x79, 0xe0, 0x1e, 0x00, 0x00, 
                0x00, 0x07, 0x80, 0xf0, 0xf0, 0x1e, 0x00, 0x00, 0x00, 0x87, 0x80, 0xf0, 0xf0, 0x1e, 0x10, 0x00, 
                0x01, 0xc7, 0x80, 0xf0, 0xf0, 0x1e, 0x38, 0x00, 0x03, 0xe7, 0x81, 0xe0, 0x78, 0x1e, 0x7c, 0x00, 
                0x07, 0xc7, 0x81, 0xe0, 0x78, 0x1e, 0x3e, 0x00, 0x0f, 0x87, 0x83, 0xe0, 0x7c, 0x1e, 0x1f, 0x00, 
                0x1f, 0x07, 0x87, 0xc0, 0x3e, 0x1e, 0x0f, 0x80, 0x3e, 0x07, 0x8f, 0x80, 0x1f, 0x1e, 0x07, 0xc0, 
                0x7c, 0x07, 0xff, 0x80, 0x1f, 0xfe, 0x03, 0xe0, 0xf8, 0x07, 0xff, 0x00, 0x0f, 0xfe, 0x01, 0xf0, 
                0x70, 0x07, 0xfc, 0x00, 0x03, 0xfe, 0x00, 0xe0, 0x20, 0x07, 0xf0, 0x00, 0x00, 0xfe, 0x00, 0x40
            };
            image(img, imgPos, 60, 36);
        }

        void lightsParkSmall(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'L_PARK_SMALL', 27x23px
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8f, 0x80, 0x3e, 0x20, 
                0xcf, 0xc0, 0x7e, 0x60, 0xec, 0xe0, 0xe6, 0xe0, 0x6c, 0x71, 0xc6, 0xc0, 0x2c, 0x31, 0x86, 0x80, 
                0x0c, 0x3b, 0x86, 0x00, 0x0c, 0x1b, 0x06, 0x00, 0xec, 0x1b, 0x06, 0xe0, 0xec, 0x1b, 0x06, 0xe0, 
                0x0c, 0x1b, 0x06, 0x00, 0x0c, 0x3b, 0x86, 0x00, 0x2c, 0x31, 0x86, 0x80, 0x6c, 0x71, 0xc6, 0xc0, 
                0xec, 0xe0, 0xe6, 0xe0, 0xcf, 0xc0, 0x7e, 0x60, 0x8f, 0x80, 0x3e, 0x20
            };
            image(img, imgPos, 27, 23);
        }

        void lightsLowBig(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'L_LOWBEAM_BIG', 60x50px
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x1f, 0xf8, 0x00, 
                0x00, 0x00, 0x00, 0x18, 0x3e, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3e, 0x01, 0xfc, 0x00, 
                0x00, 0x00, 0x01, 0xfc, 0x3e, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x3e, 0x00, 0x7f, 0x00, 
                0x00, 0x00, 0x1f, 0xf8, 0x3e, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x3e, 0x00, 0x1f, 0x80, 
                0x00, 0x01, 0xff, 0x80, 0x3e, 0x00, 0x0f, 0x80, 0x00, 0x07, 0xfe, 0x00, 0x3e, 0x00, 0x0f, 0xc0, 
                0x00, 0x1f, 0xf8, 0x00, 0x3e, 0x00, 0x07, 0xc0, 0x00, 0x7f, 0xe0, 0x00, 0x3e, 0x00, 0x07, 0xe0, 
                0x01, 0xff, 0x80, 0x00, 0x3e, 0x00, 0x03, 0xe0, 0x07, 0xfe, 0x00, 0x00, 0x3e, 0x00, 0x03, 0xe0, 
                0x1f, 0xf8, 0x00, 0x18, 0x3e, 0x00, 0x03, 0xe0, 0x3f, 0xe0, 0x00, 0x78, 0x3e, 0x00, 0x03, 0xf0, 
                0x3f, 0x80, 0x01, 0xfc, 0x3e, 0x00, 0x01, 0xf0, 0x1e, 0x00, 0x07, 0xfc, 0x3e, 0x00, 0x01, 0xf0, 
                0x18, 0x00, 0x1f, 0xf8, 0x3e, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x7f, 0xe0, 0x3e, 0x00, 0x01, 0xf0, 
                0x00, 0x01, 0xff, 0x80, 0x3e, 0x00, 0x01, 0xf0, 0x00, 0x07, 0xfe, 0x00, 0x3e, 0x00, 0x01, 0xf0, 
                0x00, 0x1f, 0xf8, 0x00, 0x3e, 0x00, 0x01, 0xf0, 0x00, 0x7f, 0xe0, 0x00, 0x3e, 0x00, 0x01, 0xf0, 
                0x01, 0xff, 0x80, 0x00, 0x3e, 0x00, 0x01, 0xf0, 0x07, 0xfe, 0x00, 0x00, 0x3e, 0x00, 0x01, 0xf0, 
                0x1f, 0xf8, 0x00, 0x18, 0x3e, 0x00, 0x03, 0xf0, 0x3f, 0xe0, 0x00, 0x78, 0x3e, 0x00, 0x03, 0xe0, 
                0x3f, 0x80, 0x01, 0xfc, 0x3e, 0x00, 0x03, 0xe0, 0x1e, 0x00, 0x07, 0xfc, 0x3e, 0x00, 0x03, 0xe0, 
                0x18, 0x00, 0x1f, 0xf8, 0x3e, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x7f, 0xe0, 0x3e, 0x00, 0x07, 0xc0, 
                0x00, 0x01, 0xff, 0x80, 0x3e, 0x00, 0x0f, 0xc0, 0x00, 0x07, 0xfe, 0x00, 0x3e, 0x00, 0x0f, 0x80, 
                0x00, 0x1f, 0xf8, 0x00, 0x3e, 0x00, 0x1f, 0x80, 0x00, 0x7f, 0xe0, 0x00, 0x3e, 0x00, 0x3f, 0x00, 
                0x01, 0xff, 0x80, 0x00, 0x3e, 0x00, 0x7f, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x3e, 0x00, 0xfe, 0x00, 
                0x1f, 0xf8, 0x00, 0x00, 0x3e, 0x01, 0xfc, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x3e, 0x03, 0xf8, 0x00, 
                0x3f, 0x80, 0x00, 0x00, 0x3e, 0x1f, 0xf8, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 
                0x18, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00
            };
            image(img, imgPos, 60, 50);
        }

        void lightsLowSmall(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'L_LOW_SMALL', 27x29px
                0x00, 0x03, 0xf0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x03, 0x9f, 0x00, 
                0x00, 0x73, 0x87, 0x00, 0x01, 0xf3, 0x83, 0x80, 0x07, 0xc3, 0x83, 0x80, 0x1f, 0x03, 0x81, 0xc0, 
                0x7c, 0x03, 0x81, 0xc0, 0xf0, 0x03, 0x81, 0xc0, 0xc0, 0x03, 0x80, 0xe0, 0x00, 0x03, 0x80, 0xe0, 
                0x00, 0x73, 0x80, 0xe0, 0x01, 0xf3, 0x80, 0xe0, 0x07, 0xc3, 0x80, 0xe0, 0x1f, 0x03, 0x80, 0xe0, 
                0x7c, 0x03, 0x80, 0xe0, 0xf0, 0x03, 0x80, 0xe0, 0xc0, 0x03, 0x80, 0xe0, 0x00, 0x03, 0x81, 0xc0, 
                0x00, 0x73, 0x81, 0xc0, 0x01, 0xf3, 0x81, 0xc0, 0x07, 0xc3, 0x83, 0x80, 0x1f, 0x03, 0x83, 0x80, 
                0x7c, 0x03, 0x87, 0x00, 0xf0, 0x03, 0x9f, 0x00, 0xc0, 0x03, 0xfe, 0x00, 0x00, 0x03, 0xfc, 0x00, 
                0x00, 0x03, 0xf0, 0x00
            };
            image(img, imgPos, 27, 29);
        }

        void lightsHighBig(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'L_HIGHBEAM_BIG', 60x50px
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xf8, 0x00, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xfc, 0x00, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0x00, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xc0, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xe0, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xe0, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xe0, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xe0, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xc0, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0x00, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xfe, 0x00, 
                0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xf8, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00
            };
            image(img, imgPos, 60, 50);
        }

        void lightsHighSmall(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'L_HIGH_SMALL', 27x29px
                0x00, 0x03, 0xf0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x03, 0xff, 0x00, 
                0xff, 0xf3, 0xff, 0x00, 0xff, 0xf3, 0xff, 0x80, 0xff, 0xf3, 0xff, 0x80, 0x00, 0x03, 0xff, 0xc0, 
                0x00, 0x03, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xf3, 0xff, 0xe0, 0xff, 0xf3, 0xff, 0xe0, 
                0xff, 0xf3, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xe0, 
                0xff, 0xf3, 0xff, 0xe0, 0xff, 0xf3, 0xff, 0xe0, 0xff, 0xf3, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xc0, 
                0x00, 0x03, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xc0, 0xff, 0xf3, 0xff, 0x80, 0xff, 0xf3, 0xff, 0x80, 
                0xff, 0xf3, 0xff, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x03, 0xfc, 0x00, 
                0x00, 0x03, 0xf0, 0x00
            };
            image(img, imgPos, 27, 29);
        }
        
        void neutralBig(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'N_BIG', 60x50px
                0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
                0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
                0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xff, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0x7f, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x7f, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0x3f, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x3f, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0x1f, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x0f, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0x0f, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x07, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0x07, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x03, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0x01, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x81, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0x80, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xc0, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xc0, 0x7c, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xe0, 0x3c, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xf0, 0x3c, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xf0, 0x1c, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xf8, 0x1c, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xf8, 0x0c, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xfc, 0x04, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xfe, 0x04, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xfe, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0x00, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xff, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0x80, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xff, 0xc0, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0xc0, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xff, 0xf0, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0xf8, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xff, 0xf8, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xc0, 0xff, 0xfc, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x0f, 0xff, 0xf0, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
                0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
                0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00
            };
            image(img, imgPos, 60, 50);
        }

        void neutralSmall(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'N_SMALL', 27x29px
                0x3f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xe0, 
                0xff, 0xff, 0xff, 0xe0, 0xfe, 0x3f, 0x8f, 0xe0, 0xfe, 0x1f, 0x8f, 0xe0, 0xfe, 0x1f, 0x8f, 0xe0, 
                0xfe, 0x0f, 0x8f, 0xe0, 0xfe, 0x0f, 0x8f, 0xe0, 0xfe, 0x27, 0x8f, 0xe0, 0xfe, 0x27, 0x8f, 0xe0, 
                0xfe, 0x33, 0x8f, 0xe0, 0xfe, 0x33, 0x8f, 0xe0, 0xfe, 0x39, 0x8f, 0xe0, 0xfe, 0x39, 0x8f, 0xe0, 
                0xfe, 0x3c, 0x8f, 0xe0, 0xfe, 0x3c, 0x8f, 0xe0, 0xfe, 0x3e, 0x0f, 0xe0, 0xfe, 0x3e, 0x0f, 0xe0, 
                0xfe, 0x3f, 0x0f, 0xe0, 0xfe, 0x3f, 0x0f, 0xe0, 0xfe, 0x3f, 0x8f, 0xe0, 0xfe, 0x3f, 0x8f, 0xe0, 
                0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xc0, 
                0x3f, 0xff, 0xff, 0x80
            };
            image(img, imgPos, 27, 29);
        }
        

        void indicatorRight(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'IND_RIGHT', 60x50px
                0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
                0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
            };
            image(img, imgPos, 60, 50);
        }   

        void indicatorLeft(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'IND_LEFT', 60x50px
                0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
                0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
                0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00
            };
            image(img, imgPos, 60, 50);
        }

        void indicatorHazard(ImagePosition imgPos) {
            static const unsigned char PROGMEM img[] = {
                // 'IND_HAZARD', 75x50px
                0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 
                0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x07, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x7e, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 
                0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 
                0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 
                0x7f, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x07, 
                0xff, 0xc0, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xfe, 
                0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 
                0x00, 0x00, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xc0, 0x00, 
                0x00, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0xff, 
                0xff, 0xff, 0xf0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x07, 0xff, 
                0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
                0xfe, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 
                0xe0, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xc0, 
                0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 
                0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 
                0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 
                0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 
                0xe0, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xf8, 0x00, 
                0x01, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xe0, 0xff, 
                0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 
                0xff, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xff, 
                0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 
                0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 
                0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 
                0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x3f, 0xc0, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x7f, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 
                0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 
                0x60, 0x00, 0x00, 0x00
            };
            image(img, imgPos, 75, 50);
        }

        void menuSelectFrame(bool left, bool right) {
            static const unsigned char PROGMEM img[] = {
                // 'MenuCheckUnselected', 50x50px
                0x00, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0x00, 
                0x00, 0x00, 0x00, 0x3c, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x38, 0x00, 0x00, 0x00, 
                0x00, 0x07, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 
                0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 
                0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 
                0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x60, 0x00, 0x00, 
                0x00, 0x00, 0x01, 0x80, 0x70, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, 
                0x07, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 
                0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00
            };
            uint8_t width = 50;
            uint8_t height = 50;
            if (left) {
                uint8_t leftPosition = (Config::DisplaySettings::screenWidth/2)-6-width;
                display.drawBitmap(leftPosition, 3, img, width, height, SSD1306_WHITE);
            } 
            if (right) {
                uint8_t leftPosition = (Config::DisplaySettings::screenWidth/2)+6;
                display.drawBitmap(leftPosition, 3, img, width, height, SSD1306_WHITE);
            } 

        }
        
        void menuSelectFrameContentInverse(bool left, bool right) {
            static const unsigned char PROGMEM img[] = {
                // 'MenuCheckSelected', 50x50px
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
                0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xff, 
                0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfe, 
                0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
                0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 
                0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
                0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
                0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 
                0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 
                0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
                0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 
                0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xff, 0xff, 
                0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
                0xf8, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            uint8_t width = 50;
            uint8_t height = 50;
            if (left) {
                uint8_t leftPosition = (Config::DisplaySettings::screenWidth/2)-6-width;
                display.drawBitmap(leftPosition, 3, img, width, height, SSD1306_INVERSE);
            } 
            if (right) {
                uint8_t leftPosition = (Config::DisplaySettings::screenWidth/2)+6;
                display.drawBitmap(leftPosition, 3, img, width, height, SSD1306_INVERSE);
            } 

        }
        
        void menuSelectIconConfirm(bool left, bool right) {
            static const unsigned char PROGMEM img[] = {
                // 'MenuCheckIconX', 19x19px
                0x20, 0x00, 0x80, 0x70, 0x01, 0xc0, 0xf8, 0x03, 0xe0, 0x7c, 0x07, 0xc0, 0x3e, 0x0f, 0x80, 0x1f, 
                0x1f, 0x00, 0x0f, 0xbe, 0x00, 0x07, 0xfc, 0x00, 0x03, 0xf8, 0x00, 0x01, 0xf0, 0x00, 0x03, 0xf8, 
                0x00, 0x07, 0xfc, 0x00, 0x0f, 0xbe, 0x00, 0x1f, 0x1f, 0x00, 0x3e, 0x0f, 0x80, 0x7c, 0x07, 0xc0, 
                0xf8, 0x03, 0xe0, 0x70, 0x01, 0xc0, 0x20, 0x00, 0x80
            };
            uint8_t width = 19;
            uint8_t height = 19;
            uint8_t y = 3 + 11;
            if (left) {
                uint8_t x = ((Config::DisplaySettings::screenWidth/2)-6-25)-(width/2);
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            }
            if (right) {
                uint8_t x = ((Config::DisplaySettings::screenWidth/2)+6+25)-(width/2);
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            }

        }

        void menuSelectIconReject(bool left, bool right) {
            static const unsigned char PROGMEM img[] = {
                // 'MenuCheckIconCheck', 19x18px
                0x00, 0x00, 0x80, 0x00, 0x01, 0xc0, 0x00, 0x03, 0xe0, 0x00, 0x03, 0xe0, 0x00, 0x07, 0xc0, 0x00, 
                0x0f, 0x80, 0x00, 0x1f, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x3e, 0x00, 0x20, 0x7c, 0x00, 0x70, 0xf8, 
                0x00, 0xf8, 0xf8, 0x00, 0x7d, 0xf0, 0x00, 0x3f, 0xe0, 0x00, 0x1f, 0xc0, 0x00, 0x0f, 0xc0, 0x00, 
                0x07, 0x80, 0x00, 0x03, 0x00, 0x00
            };
            uint8_t width = 19;
            uint8_t height = 18;
            uint8_t y = 3 + 11;
            if (left) {
                uint8_t x = ((Config::DisplaySettings::screenWidth/2)-6-25)-(width/2);
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            }
            if (right) {
                uint8_t x = ((Config::DisplaySettings::screenWidth/2)+6+25)-(width/2);
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            }

        }

        void menuSelectIconOn(bool left, bool right) {
            static const unsigned char PROGMEM img[] = {
                // 'MenuCheckOn', 30x32px
                0x00, 0x07, 0x80, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x67, 0x98, 0x00, 
                0x01, 0xe7, 0x9e, 0x00, 0x03, 0xe7, 0x9f, 0x00, 0x0f, 0xe7, 0x9f, 0xc0, 0x0f, 0xc7, 0x8f, 0xe0, 
                0x1f, 0x07, 0x83, 0xe0, 0x3e, 0x07, 0x81, 0xf0, 0x3c, 0x07, 0x80, 0xf0, 0x7c, 0x07, 0x80, 0xf8, 
                0x78, 0x07, 0x80, 0x78, 0xf8, 0x07, 0x80, 0x7c, 0xf0, 0x07, 0x80, 0x3c, 0xf0, 0x07, 0x80, 0x3c, 
                0xf0, 0x07, 0x80, 0x3c, 0xf0, 0x00, 0x00, 0x3c, 0xf0, 0x00, 0x00, 0x3c, 0xf0, 0x00, 0x00, 0x3c, 
                0xf8, 0x00, 0x00, 0x7c, 0x78, 0x00, 0x00, 0x78, 0x7c, 0x00, 0x00, 0xf8, 0x3c, 0x00, 0x00, 0xf0, 
                0x3e, 0x00, 0x01, 0xf0, 0x1f, 0x00, 0x03, 0xe0, 0x1f, 0xc0, 0x0f, 0xe0, 0x0f, 0xf0, 0x3f, 0xc0, 
                0x07, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x1f, 0xe0, 0x00
            };
            uint8_t width = 30;
            uint8_t height = 32;
            uint8_t y = 3 + (50/2) - (height/2); // (50/2) = Middle of Checkbox frama size
            if (left) {
                uint8_t x = (Config::DisplaySettings::screenWidth/2)-6-(50/2)-(width/2); // (50/2) = Middle of Checkbox frama size
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            } 
            if (right) {
                uint8_t x = (Config::DisplaySettings::screenWidth/2)+6+(50/2)-(width/2); // (50/2) = Middle of Checkbox frama size 
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            } 

        }

        void menuSelectIconOff(bool left, bool right) {
            static const unsigned char PROGMEM img[] = {
                // 'MenuCheckOff', 30x32px
                0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x18, 0x7f, 0xf8, 0x00, 0x3c, 0x7f, 0xfe, 0x00, 
                0x7e, 0x3f, 0xff, 0x00, 0x3f, 0x10, 0x3f, 0xc0, 0x1f, 0x80, 0x0f, 0xe0, 0x0f, 0xc0, 0x03, 0xe0, 
                0x07, 0xe0, 0x01, 0xf0, 0x23, 0xf0, 0x00, 0xf0, 0x71, 0xf8, 0x00, 0xf8, 0x78, 0xfc, 0x00, 0x78, 
                0xf8, 0x7e, 0x00, 0x7c, 0xf0, 0x3f, 0x00, 0x3c, 0xf0, 0x1f, 0x80, 0x3c, 0xf0, 0x0f, 0x00, 0x3c, 
                0xf0, 0x06, 0x00, 0x3c, 0xf0, 0x00, 0x00, 0x3c, 0xf0, 0x00, 0x00, 0x3c, 0xf8, 0x00, 0x00, 0x7c, 
                0x78, 0x00, 0x00, 0x78, 0x7c, 0x00, 0x00, 0xf8, 0x3c, 0x00, 0x00, 0xf0, 0x3e, 0x00, 0x01, 0xf0, 
                0x1f, 0x00, 0x03, 0xe0, 0x1f, 0xc0, 0x0f, 0xe0, 0x0f, 0xf0, 0x3f, 0xc0, 0x07, 0xff, 0xff, 0x80, 
                0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00
            };
            uint8_t width = 30;
            uint8_t height = 32;
            uint8_t y = 3 + (50/2) - (height/2); // (50/2) = Middle of Checkbox frama size
            if (left) {
                uint8_t x = (Config::DisplaySettings::screenWidth/2)-6-(50/2)-(width/2); // (50/2) = Middle of Checkbox frama size
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            } 
            if (right) {
                uint8_t x = (Config::DisplaySettings::screenWidth/2)+6+(50/2)-(width/2); // (50/2) = Middle of Checkbox frama size 
                display.drawBitmap(x, y, img, width, height, SSD1306_WHITE);
            } 

        }

};
